学习内容 pandas索引部分
https://datawhalechina.github.io/joyful-pandas/build/html/%E7%9B%AE%E5%BD%95/ch3.html


多级索引结构 相关函数以及索引常用方法（用到啥查啥）




Ex1：公司员工数据集
现有一份公司员工数据集：

In [180]: df = pd.read_csv('data/company.csv')

In [181]: df.head(3)
Out[181]: 
   EmployeeID birthdate_key  age  city_name department      job_title gender
0        1318      1/3/1954   61  Vancouver  Executive            CEO      M
1        1319      1/3/1957   58  Vancouver  Executive      VP Stores      F
2        1320      1/2/1955   60  Vancouver  Executive  Legal Counsel      F
分别只使用 query 和 loc 选出年龄不超过四十岁且工作部门为 Dairy 或 Bakery 的男性。

选出员工 ID 号 为奇数所在行的第1、第3和倒数第2列。

按照以下步骤进行索引操作：

把后三列设为索引后交换内外两层

恢复中间一层

修改外层索引名为 Gender

用下划线合并两层行索引

把行索引拆分为原状态

修改索引名为原表名称

恢复默认索引并将列保持为原表的相对位置



1.df.query("(age <= 40)&(department == ['Dairy', 'Bakery'])&(gender=='M')").head(3)
也可用
dpt = ['Dairy', 'Bakery'] #将变量传入表达式中
df.query("(age <= 40)&(department == @dpt)&(gender=='M')").head(3) 

2.df.iloc[(df.EmployeeID%2==1).values,[0,2,-2]].head(3)

	EmployeeID	age	job_title
1	1319	58	VP Stores
3	1321	56	VP Human Resources
5	1323	53	Exec Assistant, VP Stores


3.1
df_op = df.copy()
df_op = df_op.set_index(df_op.columns[-3:].tolist()).swaplevel(0,2,axis=0)
df_op

			EmployeeID	birthdate_key	age	city_name
gender	job_title	department				
M	CEO	Executive	1318	1/3/1954	61	Vancouver
F	VP Stores	Executive	1319	1/3/1957	58	Vancouver
Legal Counsel	Executive	1320	1/2/1955	60	Vancouver
M	VP Human Resources	Executive	1321	1/2/1959	56	Vancouver
VP Finance	Executive	1322	1/9/1958	57	Vancouver

EmployeeID	birthdate_key	age	city_name	department	job_title	gender
0	1318	1/3/1954	61	Vancouver	Executive	CEO		M
1	1319	1/3/1957	58	Vancouver	Executive	VP Stores	F
2	1320	1/2/1955	60	Vancouver	Executive	Legal Counsel	F
3	1321	1/2/1959	56	Vancouver	Executive	VP Human Resources	M
4	1322	1/9/1958	57	Vancouver	Executive	VP Finance	M
可以看到其变化


df_op = df_op.rename_axis(index={'gender':'Gender'}) 通过 rename_axis 可以对索引层的名字进行修改，常用的修改方式是传入字典的映射

df_op.index = df_op.index.map(lambda x:'_'.join(x))  多级索引的压缩（我写的df_op.index = df_op.index.map(lambda x:x[0]+"_"+x[1])效果相同 .jion(x)函数不太懂 ）

df_op.index = df_op.index.map(lambda x:tuple(x.split('_')))  索引拆分回原样






Ex2：巧克力数据集(边看答案边写的)


现有一份关于巧克力评价的数据集：

In [182]: df = pd.read_csv('data/chocolate.csv')

In [183]: df.head(3)
Out[183]: 
    Company  Review\nDate Cocoa\nPercent Company\nLocation  Rating
0  A. Morin          2016            63%            France    3.75
1  A. Morin          2015            70%            France    2.75
2  A. Morin          2015            70%            France    3.00

1.把列索引名中的 \n 替换为空格。

2.巧克力 Rating 评分为1至5，每0.25分一档，请选出2.75分及以下且可可含量 Cocoa Percent 高于中位数的样本。

3.将 Review Date 和 Company Location 设为索引后，选出 Review Date 在2012年之后且 Company Location 不属于 France, Canada, Amsterdam, Belgium 的样本。




In [65]: df = pd.read_csv('data/chocolate.csv')

In [66]: df.columns = [' '.join(i.split('\n')) for i in df.columns]     （此处不太懂）

In [67]: df.head(3)
Out[67]: 
    Company  Review Date Cocoa Percent Company Location  Rating
0  A. Morin         2016           63%           France    3.75
1  A. Morin         2015           70%           France    2.75
2  A. Morin         2015           70%           France    3.00
In [68]: df['Cocoa Percent'] = df['Cocoa Percent'].apply(lambda x:float(x[:-1])/100)

In [69]: df.query('(Rating<3)&(`Cocoa Percent`>`Cocoa Percent`.median())').head(3)
Out[69]: 
               Company  Review Date  Cocoa Percent Company Location  Rating
33  Akesson's (Pralus)         2010           0.75      Switzerland    2.75
34  Akesson's (Pralus)         2010           0.75      Switzerland    2.75
36       Alain Ducasse         2014           0.75           France    2.75
In [70]: idx = pd.IndexSlice

In [71]: exclude = ['France', 'Canada', 'Amsterdam', 'Belgium']

In [72]: res = df.set_index(['Review Date', 'Company Location']).sort_index(level=0)

In [73]: res.loc[idx[2012:,~res.index.get_level_values(1).isin(exclude)],:].head(3)
Out[73]: 
                                  Company  Cocoa Percent  Rating
Review Date Company Location                                    
2012        Australia         Bahen & Co.            0.7     3.0
            Australia         Bahen & Co.            0.7     2.5
            Australia         Bahen & Co.            0.7     2.5








